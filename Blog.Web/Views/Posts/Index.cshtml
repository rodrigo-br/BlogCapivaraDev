@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager;
@inject UserManager<IdentityUser> userManager;
@model Blog.Web.Models.ViewModels.BlogDetailsViewModel;
@{
	ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-8 text-light">

			@if (Model != null)
			{
				<h1 class="mb-3">
					@Model.Heading
				</h1>

				<div class="d-flex justify-content-between mb-3">
					<span class="opacity-75">
						@Model.Author
					</span>

					<span class="opacity-75">
						@Model.PublishedDate.ToShortDateString()
					</span>
				</div>

				<div class="mb-3">

					@if (signInManager.IsSignedIn(User))
					{
						if (Model.Liked)
						{
							<a style="cursor: pointer;">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnLike" style="cursor: pointer;">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}
					}

					<span id="totalLikes">
						@Model.TotalLikes
					</span> likes
				</div>

				<div class="mb-3 d-flex">
					@foreach (var tag in Model.Tags)
					{
						<span class="badge bg-primary bg-opacity-75 me-1">
							@tag.Name
						</span>
					}
				</div>

				<img src="@Model.FeaturedImageUrl"
					alt="Featured image for this post"
					class="d-block img-fluid mb-3"/>

				<div class="mb-3 blog-details-content">
					@Html.Raw(Model.Content)
				</div>

				<div class="card bg-black">
					<div class="card-header bg-info bg-opacity-25">
						<h5>Comments</h5>

						@if (signInManager.IsSignedIn(User))
						{

							<form method="post">
								<div class="mb-3">
									<label class="form-label">
										Comment Description
									</label>
									<input type="text" class="form-control bg-secondary text-light fw-bold" asp-for="CommentDescription" required />
								</div>
								<div class="mb-3">
									<button type="submit" class="btn btn-primary">
										Submit
									</button>
									<input type="hidden" asp-for="Id" />
									<input type="hidden" asp-for="UrlHandle" />
								</div>
							</form>

						}

					</div>
					<div class="card-body bg-info bg-opacity-25">

						@if (Model.Comments != null && Model.Comments.Any())
						{

							@foreach (var comment in Model.Comments)
							{

								<div class="card mb-3">
									<div class="card-body text-light bg-secondary">
										<div>
											@comment.Description
										</div>
										<div class="d-flex justify-content-between">
											<span class="opacity-75">
												@comment.Username
											</span>
											<span class="opacity-75">
												@comment.DateAdded.ToShortDateString()
											</span>
										</div>
									</div>
								</div>

							}
						}

					</div>
				</div>
			}
			else
			{
				<p>
					Post not found!
				</p>
			}

		</div>
	</div>
</div>


@section Scripts
{

	<script>
		const btnLikeElement = document.getElementById('btnLike');
		const totalLikesElement = document.getElementById('totalLikes');

		async function getTotalLikes() {
			fetch('/api/BlogPostLike/@Model.Id/totalLikes', {
				method: 'GET',
				headers: {
					'Content-Type':'application/json',
					'Accept':'*/*'
				}
			}).then(data => data.json())
			.then(result => totalLikesElement.innerHTML = result);
		}

		async function addLikeForBlog() {
			fetch('/api/BlogPostLike/Add', {
				method: 'POST',
				headers: {
					'Content-Type':'application/json',
					'Accept':'*/*'
				},
				body: JSON.stringify({
					blogPostId: '@Model.Id',
					userId: '@userManager.GetUserId(User)'
				})
			}).then(() => {
				btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
				btnLikeElement.removeEventListener('click', addLikeForBlog);
				getTotalLikes();
			});
		}

		btnLikeElement.addEventListener('click', addLikeForBlog);

	</script>

}
